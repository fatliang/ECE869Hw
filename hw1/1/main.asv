i=2;
j=0;
N = i^2+j^2+i*j;
cos_sita = sqrt(3)/2*i/sqrt(N);
sin_sita = (i+2*j)/sqrt(N)/2;
n = [0:5];
A1 = cos_sita*cos(pi*n/3)-sin_sita*sin(pi*n/3);
A2 = sin_sita*cos(pi*n/3)+cos_sita*sin(pi*n/3);
tier_1 = 3*N+1-sqrt(3*N)*A1-3*sqrt(N)*A2;
tier_2_1 = 12*N+1-2*sqrt(3*N)*A1-6*sqrt(N)*A2;
B1 = cos_sita*cos(pi*(n+1)/3)-sin_sita*sin(pi*(n+1)/3);
B2 = sin_sita*cos(pi*(n+1)/3)+cos_sita*sin(pi*(n+1)/3);
tier_2_2 = 9*N+1-sqrt(3*N)*(A1+B1)-3*sqrt(N)*(A2+B2);
tier_3_1 = 27*N+1-3*sqrt(3*N)*A1-9*sqrt(N)*A2;
tier_3_2 = 21*N+1-sqrt(3*N)*(2*A1+B1)-3*sqrt(N)*(2*A2+B2);
tier_3_3 = 21*N+1-sqrt(3*N)*(A1+2*B1)-3*sqrt(N)*(A2+2*B2);
dist_tier_1 = sqrt(tier_1);
dist_tier_2 = sqrt([tier_2_1, tier_2_2]);
dist_tier_3 = sqrt([tier_3_1, tier_3_2, tier_3_3]);
n=4;
intf_1 = sum((1./dist_tier_1).^n);
intf_2 = sum((1./dist_tier_2).^n);
intf_3 = sum((1./dist_tier_3).^n);
total_intf = intf_1+intf_2+intf_3;
intf = []
